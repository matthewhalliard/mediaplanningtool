---
import BaseLayout from "./BaseLayout.astro";
import AppProse from "../components/app/Prose.astro";
const { frontmatter, slug } = Astro.props;
import themeConfig from "@util/themeConfig";
import { Icon } from "astro-icon/components";
import AppShell from "@components/app/AppShell.astro";
import config from "@util/themeConfig";
import SidebarShell from "@components/app/SidebarShell.astro";
import Tag from "@components/ui/tags/Tag.astro";

const siteTitle = themeConfig.general.title;
const title = frontmatter?.title || siteTitle;
const link = frontmatter?.link;
const description = frontmatter?.description;
const linkText = link?.replace(/^https?:\/\//, "");
const sidebar = config.layout.sidebar;
const tags = frontmatter?.tags || [];
const pricing = frontmatter?.pricing;
const category = frontmatter?.category;
const functionality = frontmatter?.functionality || [];
const targetUsers = frontmatter?.targetUsers || [];
const featured = frontmatter?.featured;
---

<BaseLayout title={title} description={description} slug={slug}>
  {
    sidebar ? (
      <SidebarShell showSidebar={false}>
        <div class="max-w-5xl w-full mx-auto pt-4 pb-16">
          <!-- Hero Section -->
          <div class="bg-gradient-to-br from-blue-50 to-indigo-50 dark:from-gray-900 dark:to-gray-800 rounded-2xl p-8 mb-6">
            <div class="flex flex-col lg:flex-row lg:items-center lg:justify-between gap-8">
              <div class="flex-1">
                {featured && (
                  <div class="inline-flex items-center gap-2 bg-yellow-100 dark:bg-yellow-900/30 text-yellow-800 dark:text-yellow-200 px-3 py-1 rounded-full text-sm font-medium mb-4">
                    <Icon name="tabler:star" class="w-4 h-4" />
                    Featured Tool
                  </div>
                )}
                <h1 class="font-bold text-5xl lg:text-6xl text-gray-900 dark:text-gray-50 mb-4">
                  {title}
                </h1>
                <p class="text-xl text-gray-600 dark:text-gray-300 mb-6 leading-relaxed">
                  {description}
                </p>
                <div class="flex flex-wrap gap-3 mb-6">
                  {tags.slice(0, 5).map((tag: string) => (
                    <Tag key={tag} tag={tag} />
                  ))}
                </div>
              </div>
              <div class="flex flex-col gap-4">
                {link && (
                  <a
                    href={link}
                    target="_blank"
                    rel="noopener noreferrer"
                    class="inline-flex items-center justify-center gap-2 bg-blue-600 hover:bg-blue-700 text-white px-8 py-4 rounded-xl font-semibold text-lg transition-colors"
                  >
                    Visit {title}
                    <Icon name="tabler:arrow-up-right" class="w-5 h-5" />
                  </a>
                )}
                <div class="text-sm text-gray-500 dark:text-gray-400 text-center">
                  {linkText}
                </div>
              </div>
            </div>
          </div>

          <!-- Metadata Cards -->
          <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-12">
            {category && (
              <div class="bg-white dark:bg-gray-800 rounded-xl p-6 border border-gray-200 dark:border-gray-700">
                <div class="flex items-center gap-2 mb-2">
                  <Icon name="tabler:category" class="w-5 h-5 text-purple-600" />
                  <h3 class="font-semibold text-gray-900 dark:text-gray-100">Category</h3>
                </div>
                <p class="text-gray-600 dark:text-gray-300">{category}</p>
              </div>
            )}
            {pricing && (
              <div class="bg-white dark:bg-gray-800 rounded-xl p-6 border border-gray-200 dark:border-gray-700">
                <div class="flex items-center gap-2 mb-2">
                  <Icon name="tabler:currency-dollar" class="w-5 h-5 text-green-600" />
                  <h3 class="font-semibold text-gray-900 dark:text-gray-100">Pricing</h3>
                </div>
                <p class="text-gray-600 dark:text-gray-300">{pricing}</p>
              </div>
            )}
            {functionality.length > 0 && (
              <div class="bg-white dark:bg-gray-800 rounded-xl p-6 border border-gray-200 dark:border-gray-700">
                <div class="flex items-center gap-2 mb-2">
                  <Icon name="tabler:tool" class="w-5 h-5 text-blue-600" />
                  <h3 class="font-semibold text-gray-900 dark:text-gray-100">Key Features</h3>
                </div>
                <p class="text-gray-600 dark:text-gray-300">{functionality.length} core features</p>
              </div>
            )}
          </div>

          <!-- Target Users -->
          {targetUsers.length > 0 && (
            <div class="bg-white dark:bg-gray-800 rounded-xl p-8 border border-gray-200 dark:border-gray-700 mb-12">
              <div class="flex items-center gap-2 mb-6">
                <Icon name="tabler:users" class="w-6 h-6 text-indigo-600" />
                <h2 class="text-2xl font-bold text-gray-900 dark:text-gray-100">Perfect For</h2>
              </div>
              <div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-4">
                {targetUsers.map((user: string) => (
                  <div class="flex items-center gap-2 bg-gray-50 dark:bg-gray-700 px-4 py-3 rounded-lg">
                    <Icon name="tabler:user-check" class="w-4 h-4 text-indigo-600" />
                    <span class="text-sm font-medium text-gray-700 dark:text-gray-300">{user}</span>
                  </div>
                ))}
              </div>
            </div>
          )}

          <!-- Main Content -->
          <div class="bg-white dark:bg-gray-800 rounded-xl p-8 border border-gray-200 dark:border-gray-700">
            <AppProse>
              <slot />
            </AppProse>
          </div>
        </div>
      </SidebarShell>
    ) : (
      <AppShell>
        <div class="max-w-5xl w-full mx-auto pt-4 pb-16">
          <!-- Hero Section -->
          <div class="bg-gradient-to-br from-blue-50 to-indigo-50 dark:from-gray-900 dark:to-gray-800 rounded-2xl p-8 mb-6">
            <div class="flex flex-col lg:flex-row lg:items-center lg:justify-between gap-8">
              <div class="flex-1">
                {featured && (
                  <div class="inline-flex items-center gap-2 bg-yellow-100 dark:bg-yellow-900/30 text-yellow-800 dark:text-yellow-200 px-3 py-1 rounded-full text-sm font-medium mb-4">
                    <Icon name="tabler:star" class="w-4 h-4" />
                    Featured Tool
                  </div>
                )}
                <h1 class="font-bold text-5xl lg:text-6xl text-gray-900 dark:text-gray-50 mb-4">
                  {title}
                </h1>
                <p class="text-xl text-gray-600 dark:text-gray-300 mb-6 leading-relaxed">
                  {description}
                </p>
                <div class="flex flex-wrap gap-3 mb-6">
                  {tags.slice(0, 5).map((tag: string) => (
                    <Tag key={tag} tag={tag} />
                  ))}
                </div>
              </div>
              <div class="flex flex-col gap-4">
                {link && (
                  <a
                    href={link}
                    target="_blank"
                    rel="noopener noreferrer"
                    class="inline-flex items-center justify-center gap-2 bg-blue-600 hover:bg-blue-700 text-white px-8 py-4 rounded-xl font-semibold text-lg transition-colors"
                  >
                    Visit {title}
                    <Icon name="tabler:arrow-up-right" class="w-5 h-5" />
                  </a>
                )}
                <div class="text-sm text-gray-500 dark:text-gray-400 text-center">
                  {linkText}
                </div>
              </div>
            </div>
          </div>

          <!-- Metadata Cards -->
          <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-12">
            {category && (
              <div class="bg-white dark:bg-gray-800 rounded-xl p-6 border border-gray-200 dark:border-gray-700">
                <div class="flex items-center gap-2 mb-2">
                  <Icon name="tabler:category" class="w-5 h-5 text-purple-600" />
                  <h3 class="font-semibold text-gray-900 dark:text-gray-100">Category</h3>
                </div>
                <p class="text-gray-600 dark:text-gray-300">{category}</p>
              </div>
            )}
            {pricing && (
              <div class="bg-white dark:bg-gray-800 rounded-xl p-6 border border-gray-200 dark:border-gray-700">
                <div class="flex items-center gap-2 mb-2">
                  <Icon name="tabler:currency-dollar" class="w-5 h-5 text-green-600" />
                  <h3 class="font-semibold text-gray-900 dark:text-gray-100">Pricing</h3>
                </div>
                <p class="text-gray-600 dark:text-gray-300">{pricing}</p>
              </div>
            )}
            {functionality.length > 0 && (
              <div class="bg-white dark:bg-gray-800 rounded-xl p-6 border border-gray-200 dark:border-gray-700">
                <div class="flex items-center gap-2 mb-2">
                  <Icon name="tabler:tool" class="w-5 h-5 text-blue-600" />
                  <h3 class="font-semibold text-gray-900 dark:text-gray-100">Key Features</h3>
                </div>
                <p class="text-gray-600 dark:text-gray-300">{functionality.length} core features</p>
              </div>
            )}
          </div>

          <!-- Target Users -->
          {targetUsers.length > 0 && (
            <div class="bg-white dark:bg-gray-800 rounded-xl p-8 border border-gray-200 dark:border-gray-700 mb-12">
              <div class="flex items-center gap-2 mb-6">
                <Icon name="tabler:users" class="w-6 h-6 text-indigo-600" />
                <h2 class="text-2xl font-bold text-gray-900 dark:text-gray-100">Perfect For</h2>
              </div>
              <div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-4">
                {targetUsers.map((user: string) => (
                  <div class="flex items-center gap-2 bg-gray-50 dark:bg-gray-700 px-4 py-3 rounded-lg">
                    <Icon name="tabler:user-check" class="w-4 h-4 text-indigo-600" />
                    <span class="text-sm font-medium text-gray-700 dark:text-gray-300">{user}</span>
                  </div>
                ))}
              </div>
            </div>
          )}

          <!-- Main Content -->
          <div class="bg-white dark:bg-gray-800 rounded-xl p-8 border border-gray-200 dark:border-gray-700">
            <AppProse>
              <slot />
            </AppProse>
          </div>
        </div>
      </AppShell>
    )
  }
</BaseLayout>
