import { a as createAstro, b as createComponent, m as maybeRenderHead, r as renderComponent, f as addAttribute, g as renderScript, d as renderTemplate, h as createTransitionScope, e as renderSlot } from './astro/server_0TAb0-Fu.mjs';
import 'kleur/colors';
import { b as $$Logo, c as $$ColorSelector, d as $$Banner, e as $$Footer } from './Banner_CsduCQyV.mjs';
import { $ as $$Icon } from './Icon_CIFy29iW.mjs';
import { c as config } from './themeConfig_B5HJj9Rt.mjs';
/* empty css                                   */

const $$Astro = createAstro("https://www.mediaplanningtool.com");
const $$Navbar = createComponent(($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro, $$props, $$slots);
  Astro2.self = $$Navbar;
  const isActive = (path, currentPath2) => {
    if (!currentPath2) return false;
    return currentPath2.split("/")[1] === path.split("/")[1] || currentPath2 === path;
  };
  const currentPath = new URL(Astro2.request.url).pathname;
  return renderTemplate`${maybeRenderHead()}<nav class="bg-white dark:bg-gray-700 border-b border-gray-200 dark:border-gray-600"> <div class="mx-auto max-w-7xl px-2 sm:px-6 lg:px-8"> <div class="relative flex h-16 justify-between"> <!-- Mobile menu button --> <div class="absolute inset-y-0 left-0 flex items-center sm:hidden"> <button id="mobile-menu-button" class="relative inline-flex items-center justify-center rounded-md p-2 text-gray-400 hover:bg-gray-100 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-primary-500" aria-label="Open main menu"> <span class="sr-only">Open main menu</span> ${renderComponent($$result, "Icon", $$Icon, { "id": "mobile-menu-icon", "name": "tabler:baseline-density-medium", "class": "block h-6 w-6", "aria-hidden": "true" })} </button> </div> <!-- Logo and desktop menu --> <div class="flex flex-1 items-center justify-center sm:items-stretch sm:justify-start"> <div class="flex flex-shrink-0 items-center"> ${renderComponent($$result, "Logo", $$Logo, {})} </div> <div class="hidden sm:ml-6 sm:flex sm:space-x-8"> ${config.header.navbar.links.map(
    (navItem) => navItem.target !== "_blank" ? renderTemplate`<a${addAttribute(navItem.href, "href")}${addAttribute(`inline-flex gap-2 items-center border-b-2 px-1 pt-1 text-sm font-medium ${isActive(navItem.href, currentPath) ? "border-primary-500 text-gray-900 dark:text-gray-50" : "border-transparent hover:border-gray-300 dark:hover:border-gray-500 hover:text-gray-700 text-gray-500 dark:text-gray-200"}`, "class")}> ${navItem.name} </a>` : renderTemplate`<a${addAttribute(navItem.href, "href")} target="_blank" class="inline-flex gap-2 items-center border-b-2 px-1 pt-1 text-sm font-medium border-transparent hover:border-gray-300 hover:text-gray-700 dark:hover:border-gray-500 text-gray-500 dark:text-gray-200"> ${navItem.name} ${renderComponent($$result, "Icon", $$Icon, { "name": "tabler:external-link" })} </a>`
  )} </div> </div> <!-- Action button and color selector --> <div class="absolute inset-y-0 right-0 flex items-center pr-2 sm:static sm:inset-auto sm:ml-6 sm:pr-0"> <div class="flex gap-2 items-center md:order-2 space-x-3 md:space-x-0 rtl:space-x-reverse"> ${config.header.navbar.colorModeSelector && renderTemplate`${renderComponent($$result, "ColorSelector", $$ColorSelector, { "class": "hidden md:flex", "data-astro-transition-persist": createTransitionScope($$result, "uwopwiz3") })}`} <a${addAttribute(config?.header.actionButton?.href, "href")} class="hidden md:block text-white bg-primary-700 hover:bg-primary-800 focus:ring-4 focus:outline-none focus:ring-primary-300 font-medium rounded-lg text-sm px-4 py-2 text-center dark:bg-primary-600 dark:hover:bg-primary-700 dark:focus:ring-primary-800"> ${config?.header.actionButton?.text} </a> </div> </div> </div> </div> <!-- Mobile menu --> <div id="mobile-menu" class="sm:hidden hidden"> <div class="space-y-1 pb-4 pt-2"> ${config.header.navbar.links.map((item) => renderTemplate`<a${addAttribute(item.href, "href")}${addAttribute(`block border-l-4 py-2 pl-3 pr-4 text-base font-medium ${isActive(item.href, currentPath) ? "bg-primary-50 border-primary-500 text-primary-700" : "border-transparent text-gray-500 hover:bg-gray-50 hover:border-gray-300 hover:text-gray-700"}`, "class")}> ${item.name} ${item.target === "_blank" && renderTemplate`${renderComponent($$result, "Icon", $$Icon, { "name": "tabler:external-link" })}`} </a>`)} </div> <div class="border-t border-gray-200 pb-3 pt-4"> <div class="flex items-center px-4"> <a${addAttribute(config?.header.actionButton?.href, "href")} class="text-white bg-primary-700 hover:bg-primary-800 focus:ring-4 focus:outline-none focus:ring-primary-300 font-medium rounded-lg text-sm px-4 py-2 text-center dark:bg-primary-600 dark:hover:bg-primary-700 dark:focus:ring-primary-800"> ${config?.header.actionButton?.text} </a> </div> </div> </div> </nav> <!-- JavaScript to handle mobile menu toggle --> ${renderScript($$result, "/Users/matthewjacobs/Documents/media-planning-tool/astro-template/src/components/app/Navbar.astro?astro&type=script&index=0&lang.ts")}`;
}, "/Users/matthewjacobs/Documents/media-planning-tool/astro-template/src/components/app/Navbar.astro", "self");

const $$AppShell = createComponent(($$result, $$props, $$slots) => {
  return renderTemplate`${maybeRenderHead()}<div> ${renderComponent($$result, "Banner", $$Banner, {})} ${renderComponent($$result, "Navbar", $$Navbar, {})} ${renderSlot($$result, $$slots["default"])} ${renderComponent($$result, "Footer", $$Footer, {})} </div>`;
}, "/Users/matthewjacobs/Documents/media-planning-tool/astro-template/src/components/app/AppShell.astro", void 0);

export { $$AppShell as $ };
